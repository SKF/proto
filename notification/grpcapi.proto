syntax = "proto3";
package grpcapi;

option csharp_namespace = "SKF.Enlight.API.Notification";

import "common/common.proto";

service Notification {
  rpc DeepPing (common.Void) returns (common.PrimitiveString) {}

  rpc SetNotificationType (SetNotificationTypeInput) returns (common.Void) {}
  rpc GetNotificationType (GetNotificationTypeInput) returns (GetNotificationTypeOutput) {}
  rpc RemoveNotificationType (RemoveNotificationTypeInput) returns (common.Void) {}

  rpc InitiateNotification (InitiateNotificationInput) returns (InitiateNotificationOutput) {}
  rpc GetInitiatedNotification (GetInitiatedNotificationInput) returns (GetInitiatedNotificationOutput) {}
  rpc RemoveInitiatedNotification (RemoveInitiatedNotificationInput) returns (common.Void) {}

  rpc SetUserPreferences (SetUserPreferencesInput) returns (common.Void) {}
  rpc GetUserPreferences (GetUserPreferencesInput) returns (GetUserPreferencesOutput) {}
  rpc RemoveUserPreferences (RemoveUserPreferencesInput) returns (common.Void) {}

  rpc GetUserNotifications (GetUserNotificationsInput) returns (GetUserNotificationsOutput) {}
  rpc RemoveUserNotifications (RemoveUserNotificationsInput) returns (common.Void) {}

  rpc UpdateUserNotificationStatus (UpdateUserNotificationStatusInput) returns (common.Void) {}
}

enum DeliveryChannel {
  MAIL = 0;
  POPUP = 1;
}

enum DeliveryScheduleType {
  IMMEDIATE = 0;
  DAILY = 1;
}

enum SendState {
  NEW = 0;
  SENT_OK = 1;
  ERROR = 2;
}

message DeliverySchedule {
  DeliveryScheduleType default_delivery_schedule = 1;
  int32 MinimumSecondsBetweenNotifications = 2;
  int32 DailyDeliveryTimeHour = 3;
  int32 DailyDeliveryTimeMinute = 4;
}

message NotificationType {
  string name = 1;
  string qualifying_action = 2;
  DeliveryChannel default_delivery_channel = 3;
  DeliverySchedule default_delivery_schedule = 4;
}

message InitiatedNotification {
  string external_id = 1;
  NotificationType type = 2;
  common.Origin resource = 3;
  string header = 4;
  string body = 5;
  string created_by = 6;
}


message SetNotificationTypeInput {
  NotificationType notification_type = 1;
}
message GetNotificationTypeInput {
  string name = 1;
}
message GetNotificationTypeOutput {
  NotificationType notification_type = 1;
}
message RemoveNotificationTypeInput {
  string name = 1;
}


message InitiateNotificationInput {
  NotificationType type = 1;
  common.Origin resource = 2;
  string header = 3;
  string body = 4;
  string created_by = 5;
}
message InitiateNotificationOutput {
  string external_id = 1;
}
message GetInitiatedNotificationInput {
  string external_id = 1;
}
message GetInitiatedNotificationOutput {
  InitiatedNotification initiated_notification = 1;
}
message RemoveInitiatedNotificationInput {
  string external_id = 1;
}


message UserNotification {
  string external_id = 1;
  InitiatedNotification initiated_notification = 2;
  UserPreference user_preference = 3;
  SendState send_state = 4;
  int64 scheduled_time = 5;
}


message GetUserNotificationsInput {
  string user_id = 1;
  int32 limit = 2;
}
message GetUserNotificationsOutput {
  repeated UserNotification notifications = 1;
}
message RemoveUserNotificationsInput {
  string user_id = 1;
  string initiated_notification_external_id = 2;
}

message UserPreferenceSchedule {
  DeliveryChannel type = 1;
  string time_of_day = 2;
  string notification_interval = 3;
}

message UserPreference {
  string user_id = 1;
  string notification_type_ext_id = 2;
  DeliveryChannel delivery_channel = 3;
  DeliverySchedule delivery_schedule = 4;
}

message SetUserPreferencesInput {
  repeated UserPreference preferences = 1;
}
message GetUserPreferencesInput {
  string user_id = 1;
}
message GetUserPreferencesOutput {
  repeated UserPreference preferences = 1;
}
message RemoveUserPreferencesInput {
  string user_id = 1;
  string notification_type_ext_id = 2;
}

message UpdateUserNotificationStatusInput {
  string notification_id = 1;
  SendState send_state = 2;
}

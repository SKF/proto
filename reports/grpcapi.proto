syntax = "proto3";
package reports;

option csharp_namespace = "SKF.Enlight.API.Reports";
option go_package = "github.com/SKF/proto/reports";

import "common/common.proto";

service Reports {
  rpc DeepPing (common.Void) returns (DeepPingOutput) {}
  rpc GetAssetHealth (GetAssetHealthInput) returns (GetAssetHealthOutput) {}
  rpc GetFunctionalLocationHealth (GetFunctionalLocationHealthInput) returns (GetFunctionalLocationHealthOutput) {}
  rpc GetComplianceLog (GetComplianceLogInput) returns (GetComplianceLogOutput) {}
  rpc GetReports (GetReportsInput) returns (GetReportsOutput) {}
  rpc GetComplianceSummary (GetComplianceSummaryInput) returns (GetComplianceSummaryOutput) {}
}


message DeepPingOutput {
  string value = 1;
}

// Return asset health for the requested asset node
message GetAssetHealthInput {
  string node_id = 1;
}

message GetAssetHealthOutput {
  string health_status = 1;
}

// Return functional location health for requested functional location node
message GetFunctionalLocationHealthInput {
  string node_id = 1;
}

message GetFunctionalLocationHealthOutput {
  string health_status = 1;
}

// Return the compliance log for the supplied hierarchy node
message GetComplianceLogInput {
  string node_id = 1;
}

message GetComplianceLogOutput {
  repeated ComplianceItem compliance_list = 1;
}

message ComplianceItem {
  string asset_class_id = 1;
  bool is_compliant = 2;
  string compliance_note = 3;
  int64 created = 4;
}

// Return list of functional locations with their faults for the supplied list of hierarchy nodes
message GetReportsInput {
  repeated string node_ids = 1;
}

message GetReportsOutput {
  repeated ReportsItem reports_list = 1;
}

message ReportsItem {
  string functional_location_id = 1;
  string functional_location_name = 2;
  double functional_location_risk = 3;
  string functional_location_health = 4;
  repeated string names = 5;
  repeated string uuids = 6;
  repeated Asset assets = 7;

}

message Asset {
  string asset_class_id = 1;
  string asset_class_name = 2;
  double asset_class_risk = 3;
  string asset_class_health = 4;
  int64 asset_class_risk_label_since = 5;
  string compliance_status = 6;
  repeated FaultItem faults = 7;
}

message FaultItem {
  string fault_UUID = 1;
  string asset_class_id = 2;
  string fault_type = 3;
  string author = 4;
  int64 created = 5;
  int64 last_modified = 6;
  bool is_open = 7;
  string fault_status = 8;
  string fault_observation = 9;
  string severity = 10;
  string close_comment = 11;
  repeated RecommendedActionItem recommended_actions = 12;
}

message RecommendedActionItem {
  string action = 1;
  int64 created = 2;
  string comment = 3;
  string work_id = 4;
  int64 last_modified = 5;
  string action_UUID = 6;
  string status = 7;
}

message GetComplianceSummaryInput {
  repeated string uuids = 1;
  int64 start = 2;
  int64 end = 3;
}

message GetComplianceSummaryOutput {
  int64 start = 1;
  int64 end = 2;
  repeated StatusNote status_notes = 3;
  repeated System systems = 4;
  repeated int64 time_non_compliant = 5;
}

message StatusNote {	
  string reason = 1;
  int64 count = 2;
}

message System {
  string area_id = 1;
  string area_name = 2;
  int64 compliant = 3;
  int64 non_compliant = 4;
  int64 overdue  = 5;
}